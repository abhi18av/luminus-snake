{"version":3,"file":"reagent.ratom.js","sources":["reagent/ratom.cljs"],"mappings":"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","names":["reagent.ratom/notify-deref-watcher!","this","goog/getUid","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","new","cljs.core/set","derefed","check","watches","reagent.ratom/notify-w","oldstate","state","y","more","x","f","a","cljs.core/-reset!","cljs.core.apply.cljs$core$IFn$_invoke$arity$5","non-reactive","reagent.ratom/*ratom-context*","reagent.ratom/RCursor","other","key","reagent.ratom/remove-w","reagent.ratom/add-w","w","cljs.core/reset!","ratom","new-value","newstate","reagent.ratom/debug","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","reagent.ratom/-running","cljs.core/dec","on-dispose","reagent/debug.has-console","reagent/debug.tracking","reagent/debug.track-console","js/console","cljs.core/ifn?","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","_","k","q","i","reagent.ratom/->RCursor","src","path","sender","oldval","newval","r","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","fexpr__36789","cljs.core/+","old","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/count","reaction","reagent.ratom/->Reaction","cljs.core/deref","reagent.ratom/dispose!","seq__36785","cljs.core/seq","chunk__36786","count__36787","i__36788","temp__5457__auto__","cljs.core/chunked-seq?","c__4319__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/first","cljs.core/next","wg","dirty?","cljs.core/not","reagent.ratom/cache-key","reagent.ratom/cached-reaction","cljs.core/array","c","res","and__3911__auto__","len","reagent.ratom/arr-len","was-empty","on-set","reagent.ratom/check-watches","reagent.impl.batching/schedule","reagent.ratom/rea-queue","js/Error","validator","var_args","args__4502__auto__","len__4499__auto__","i__4500__auto__","argseq__4503__auto__","cljs.core/IndexedSeq","reagent.ratom/make-reaction","p__36860","map__36861","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","seq36858","G__36859","self__4486__auto__","auto-run","reagent.ratom/->Wrapper","value","cljs.core/native-satisfies?","cljs.core/IDeref","temp__5459__auto__","G__36586","reagent.ratom/atom","args-arr__4514__auto__","argseq__4515__auto__","p__36592","map__36597","seq36584","G__36585","reagent.ratom/make-track!","args","reagent.ratom/pr-atom","writer","opts","s","cljs.core/hash","reagent.ratom/arr-eq","run","obj","new-meta","reagent.ratom/RAtom","nocache?","temp__5461__auto__","p1__36540#","p2__36541#","p3__36542#","cljs.core/reduce-kv","G__36543","e","reagent.ratom/track","seq36653","G__36654","reagent.ratom/make-track","x__4211__auto__","m__4212__auto__","reagent/ratom.dispose!","goog/typeOf","cljs.core/missing-protocol","reagent/ratom.add-on-dispose!","reagent.ratom/IDisposable","reagent.ratom/temp-reaction","n__4376__auto__","reagent.ratom/check-derefs","destroy","G__36714","G__36715","G__36716","reagent.ratom/flush!","cljs.core/empty?","this__4161__auto__","writer__4162__auto__","opt__4163__auto__","cljs.core/-write","callback","seq__36777","chunk__36778","count__36779","i__36780","clojure.set.difference.cljs$core$IFn$_invoke$arity$2","e36781","reagent.impl.batching/ratom-flush","caught","watching","old-value","reagent.ratom/add-on-dispose!","cljs.core/-deref","reagent.ratom/in-context","ctx","t","reagent.ratom/cursor","cljs.core/-remove-watch","v","cljs.core/vector?","reagent.ratom/Track","reagent.ratom/reactive?","meta","reagent.ratom/->RAtom","reagent.ratom/run-in-reaction","*ratom-context*36549","cljs.core/pr-writer","G__36792","m","o","reagent.ratom/generation","reagent.ratom/Wrapper","changed","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","reagent.ratom/with-let-destroy","G__36793","G__36794","reagent.ratom/IReactiveAtom","reagent.ratom/make-wrapper","callback-fn","cljs.core/inc","cljs.core/-add-watch","reagent.ratom/handle-reaction-change","G__36618","G__36619","G__36620","or__3922__auto__","G__36795","G__36796","G__36797","no-cache","*ratom-context*36767","reagent.ratom/run","G__36650","G__36651","G__36652","reagent.ratom/->Track","p__36782","map__36783","reagent.ratom/Reaction","reagent.ratom/track!","seq36672","G__36673","cljs.core/fn?","*ratom-context*36539","reagent.ratom/rea-enqueue","reagent.ratom/running","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","*ratom-context*36699","reagent.ratom/deref-capture","G__36711","G__36712","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc-in","reagent/ratom.run","reagent.ratom/IRunnable","reagent.impl.util/make-partial-fn","seq__36773","chunk__36774","count__36775","i__36776","reagent.ratom/with-let-values","G__36704","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"],"sourcesContent":["(ns reagent.ratom\n  (:refer-clojure :exclude [atom])\n  (:require-macros [reagent.ratom :refer [with-let]])\n  (:require [reagent.impl.util :as util]\n            [reagent.debug :refer-macros [dbg log warn error dev? time]]\n            [reagent.impl.batching :as batch]\n            [clojure.set :as s]))\n\n(declare ^:dynamic *ratom-context*)\n(defonce ^boolean debug false)\n(defonce ^:private generation 0)\n(defonce ^:private -running (clojure.core/atom 0))\n\n(defn ^boolean reactive? []\n  (some? *ratom-context*))\n\n\n;;; Utilities\n\n(defn running []\n  (+ @-running))\n\n(defn- ^number arr-len [x]\n  (if (nil? x) 0 (alength x)))\n\n(defn- ^boolean arr-eq [x y]\n  (let [len (arr-len x)]\n    (and (== len (arr-len y))\n         (loop [i 0]\n           (or (== i len)\n               (if (identical? (aget x i) (aget y i))\n                 (recur (inc i))\n                 false))))))\n\n(defn- in-context [obj f]\n  (binding [*ratom-context* obj]\n    (f)))\n\n(defn- deref-capture [f r]\n  (set! (.-captured r) nil)\n  (when (dev?)\n    (set! (.-ratomGeneration r) (set! generation (inc generation))))\n  (let [res (in-context r f)\n        c (.-captured r)]\n    (set! (.-dirty? r) false)\n    ;; Optimize common case where derefs occur in same order\n    (when-not (arr-eq c (.-watching r))\n      (._update-watching r c))\n    res))\n\n(defn- notify-deref-watcher! [derefed]\n  (when-some [r *ratom-context*]\n    (let [c (.-captured r)]\n      (if (nil? c)\n        (set! (.-captured r) (array derefed))\n        (.push c derefed)))))\n\n(defn- check-watches [old new]\n  (when debug\n    (swap! -running + (- (count new) (count old))))\n  new)\n\n(defn- add-w [this key f]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (assoc w key f)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- remove-w [this key]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (dissoc w key)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- notify-w [this old new]\n  (let [w (.-watchesArr this)\n        a (if (nil? w)\n            ;; Copy watches to array for speed\n            (->> (.-watches this)\n                 (reduce-kv #(doto %1 (.push %2) (.push %3)) #js[])\n                 (set! (.-watchesArr this)))\n            w)]\n    (let [len (alength a)]\n      (loop [i 0]\n        (when (< i len)\n          (let [k (aget a i)\n                f (aget a (inc i))]\n            (f k this old new))\n          (recur (+ 2 i)))))))\n\n(defn- pr-atom [a writer opts s]\n  (-write writer (str \"#<\" s \" \"))\n  (pr-writer (binding [*ratom-context* nil] (-deref a)) writer opts)\n  (-write writer \">\"))\n\n\n;;; Queueing\n\n(defonce ^:private rea-queue nil)\n\n(defn- rea-enqueue [r]\n  (when (nil? rea-queue)\n    (set! rea-queue (array))\n    (batch/schedule))\n  (.push rea-queue r))\n\n(defn flush! []\n  (loop []\n    (let [q rea-queue]\n      (when-not (nil? q)\n        (set! rea-queue nil)\n        (dotimes [i (alength q)]\n          (._queued-run (aget q i)))\n        (recur)))))\n\n(set! batch/ratom-flush flush!)\n\n\n;;; Atom\n\n(defprotocol IReactiveAtom)\n\n(deftype RAtom [^:mutable state meta validator ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IDeref\n  (-deref [this]\n    (notify-deref-watcher! this)\n    state)\n\n  IReset\n  (-reset! [a new-value]\n    (when-not (nil? validator)\n      (assert (validator new-value) \"Validator rejected reference state\"))\n    (let [old-value state]\n      (set! state new-value)\n      (when-not (nil? watches)\n        (notify-w a old-value new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IWithMeta\n  (-with-meta [_ new-meta] (RAtom. state new-meta validator watches))\n\n  IMeta\n  (-meta [_] meta)\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Atom:\"))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn atom\n  \"Like clojure.core/atom, except that it keeps track of derefs.\"\n  ([x] (->RAtom x nil nil nil))\n  ([x & {:keys [meta validator]}] (->RAtom x meta validator nil)))\n\n\n;;; track\n\n(declare make-reaction)\n\n(def ^{:private true :const true} cache-key \"reagReactionCache\")\n\n(defn- cached-reaction [f o k obj destroy]\n  (let [m (aget o cache-key)\n        m (if (nil? m) {} m)\n        r (m k nil)]\n    (cond\n      (some? r) (-deref r)\n      (nil? *ratom-context*) (f)\n      :else (let [r (make-reaction\n                     f :on-dispose (fn [x]\n                                     (when debug (swap! -running dec))\n                                     (as-> (aget o cache-key) _\n                                       (dissoc _ k)\n                                       (aset o cache-key _))\n                                     (when (some? obj)\n                                       (set! (.-reaction obj) nil))\n                                     (when (some? destroy)\n                                       (destroy x))))\n                  v (-deref r)]\n              (aset o cache-key (assoc m k r))\n              (when debug (swap! -running inc))\n              (when (some? obj)\n                (set! (.-reaction obj) r))\n              v))))\n\n(deftype Track [f args ^:mutable reaction]\n  IReactiveAtom\n\n  IDeref\n  (-deref [this]\n    (if-some [r reaction]\n      (-deref r)\n      (cached-reaction #(apply f args) f args this nil)))\n\n  IEquiv\n  (-equiv [_ other]\n    (and (instance? Track other)\n         (= f (.-f other))\n         (= args (.-args other))))\n\n  IHash\n  (-hash [_] (hash [f args]))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Track:\")))\n\n(defn make-track [f args]\n  (Track. f args nil))\n\n(defn make-track! [f args]\n  (let [t (make-track f args)\n        r (make-reaction #(-deref t)\n                         :auto-run true)]\n    @r\n    r))\n\n(defn track [f & args]\n  {:pre [(ifn? f)]}\n  (make-track f args))\n\n(defn track! [f & args]\n  {:pre [(ifn? f)]}\n  (make-track! f args))\n\n;;; cursor\n\n(deftype RCursor [ratom path ^:mutable reaction\n                  ^:mutable state ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [_ other]\n    (and (instance? RCursor other)\n         (= path (.-path other))\n         (= ratom (.-ratom other))))\n\n  Object\n  (_peek [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_set-state [this oldstate newstate]\n    (when-not (identical? oldstate newstate)\n      (set! state newstate)\n      (when (some? watches)\n        (notify-w this oldstate newstate))))\n\n  IDeref\n  (-deref [this]\n    (let [oldstate state\n          newstate (if-some [r reaction]\n                     (-deref r)\n                     (let [f (if (satisfies? IDeref ratom)\n                               #(get-in @ratom path)\n                               #(ratom path))]\n                       (cached-reaction f ratom path this nil)))]\n      (._set-state this oldstate newstate)\n      newstate))\n\n  IReset\n  (-reset! [this new-value]\n    (let [oldstate state]\n      (._set-state this oldstate new-value)\n      (if (satisfies? IDeref ratom)\n        (if (= path [])\n          (reset! ratom new-value)\n          (swap! ratom assoc-in path new-value))\n        (ratom path new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek a))))\n  (-swap! [a f x]        (-reset! a (f (._peek a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek a) x y more)))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Cursor: \" path)))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [_] (hash [ratom path])))\n\n(defn cursor\n  [src path]\n  (assert (or (satisfies? IReactiveAtom src)\n              (and (ifn? src)\n                   (not (vector? src))))\n          (str \"src must be a reactive atom or a function, not \"\n               (pr-str src)))\n  (->RCursor src path nil nil nil))\n\n\n;;; with-let support\n\n(defn with-let-destroy [v]\n  (when-some [f (.-destroy v)]\n    (f)))\n\n(defn with-let-values [key]\n  (if-some [c *ratom-context*]\n    (cached-reaction array c key\n                     nil with-let-destroy)\n    (array)))\n\n\n;;;; reaction\n\n(defprotocol IDisposable\n  (dispose! [this])\n  (add-on-dispose! [this f]))\n\n(defprotocol IRunnable\n  (run [this]))\n\n(defn- handle-reaction-change [this sender old new]\n  (._handle-change this sender old new))\n\n\n(deftype Reaction [f ^:mutable state ^:mutable ^boolean dirty? ^boolean nocache?\n                   ^:mutable watching ^:mutable watches ^:mutable auto-run\n                   ^:mutable caught]\n  IAtom\n  IReactiveAtom\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]\n    (let [was-empty (empty? watches)]\n      (remove-w this key)\n      (when (and (not was-empty)\n                 (empty? watches)\n                 (nil? auto-run))\n        (dispose! this))))\n\n  IReset\n  (-reset! [a newval]\n    (assert (fn? (.-on-set a)) \"Reaction is read only; on-set is not allowed\")\n    (let [oldval state]\n      (set! state newval)\n      (.on-set a oldval newval)\n      (notify-w a oldval newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek-at a))))\n  (-swap! [a f x]        (-reset! a (f (._peek-at a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek-at a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek-at a) x y more)))\n\n  Object\n  (_peek-at [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_handle-change [this sender oldval newval]\n    (when-not (or (identical? oldval newval)\n                  dirty?)\n      (if (nil? auto-run)\n        (do\n          (set! dirty? true)\n          (rea-enqueue this))\n        (if (true? auto-run)\n          (._run this false)\n          (auto-run this)))))\n\n  (_update-watching [this derefed]\n    (let [new (set derefed)\n          old (set watching)]\n      (set! watching derefed)\n      (doseq [w (s/difference new old)]\n        (-add-watch w this handle-reaction-change))\n      (doseq [w (s/difference old new)]\n        (-remove-watch w this))))\n\n  (_queued-run [this]\n    (when (and dirty? (some? watching))\n      (._run this true)))\n\n  (_try-capture [this f]\n    (try\n      (set! caught nil)\n      (deref-capture f this)\n      (catch :default e\n        (set! state e)\n        (set! caught e)\n        (set! dirty? false))))\n\n  (_run [this check]\n    (let [oldstate state\n          res (if check\n                (._try-capture this f)\n                (deref-capture f this))]\n      (when-not nocache?\n        (set! state res)\n        ;; Use = to determine equality from reactions, since\n        ;; they are likely to produce new data structures.\n        (when-not (or (nil? watches)\n                      (= oldstate res))\n          (notify-w this oldstate res)))\n      res))\n\n  (_set-opts [this {:keys [auto-run on-set on-dispose no-cache]}]\n    (when (some? auto-run)\n      (set! (.-auto-run this) auto-run))\n    (when (some? on-set)\n      (set! (.-on-set this) on-set))\n    (when (some? on-dispose)\n      (set! (.-on-dispose this) on-dispose))\n    (when (some? no-cache)\n      (set! (.-nocache? this) no-cache)))\n\n  IRunnable\n  (run [this]\n    (flush!)\n    (._run this false))\n\n  IDeref\n  (-deref [this]\n    (when-some [e caught]\n      (throw e))\n    (let [non-reactive (nil? *ratom-context*)]\n      (when non-reactive\n        (flush!))\n      (if (and non-reactive (nil? auto-run))\n        (when dirty?\n          (let [oldstate state]\n            (set! state (f))\n            (when-not (or (nil? watches) (= oldstate state))\n              (notify-w this oldstate state))))\n        (do\n          (notify-deref-watcher! this)\n          (when dirty?\n            (._run this false)))))\n    state)\n\n  IDisposable\n  (dispose! [this]\n    (let [s state\n          wg watching]\n      (set! watching nil)\n      (set! state nil)\n      (set! auto-run nil)\n      (set! dirty? true)\n      (doseq [w (set wg)]\n        (-remove-watch w this))\n      (when (some? (.-on-dispose this))\n        (.on-dispose this s))\n      (when-some [a (.-on-dispose-arr this)]\n        (dotimes [i (alength a)]\n          ((aget a i) this)))))\n\n  (add-on-dispose! [this f]\n    ;; f is called with the reaction as argument when it is no longer active\n    (if-some [a (.-on-dispose-arr this)]\n      (.push a f)\n      (set! (.-on-dispose-arr this) (array f))))\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Reaction \" (hash a) \":\")))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n\n(defn make-reaction [f & {:keys [auto-run on-set on-dispose]}]\n  (let [reaction (->Reaction f nil true false nil nil nil nil)]\n    (._set-opts reaction {:auto-run auto-run\n                          :on-set on-set\n                          :on-dispose on-dispose})\n    reaction))\n\n\n\n(def ^:private temp-reaction (make-reaction nil))\n\n(defn run-in-reaction [f obj key run opts]\n  (let [r temp-reaction\n        res (deref-capture f r)]\n    (when-not (nil? (.-watching r))\n      (set! temp-reaction (make-reaction nil))\n      (._set-opts r opts)\n      (set! (.-f r) f)\n      (set! (.-auto-run r) #(run obj))\n      (aset obj key r))\n    res))\n\n(defn check-derefs [f]\n  (let [ctx (js-obj)\n        res (in-context ctx f)]\n    [res (some? (.-captured ctx))]))\n\n\n;;; wrap\n\n(deftype Wrapper [^:mutable state callback ^:mutable ^boolean changed\n                  ^:mutable watches]\n\n  IAtom\n\n  IDeref\n  (-deref [this]\n    (when (dev?)\n      (when (and changed (some? *ratom-context*))\n        (warn \"derefing stale wrap: \"\n              (pr-str this))))\n    state)\n\n  IReset\n  (-reset! [this newval]\n    (let [oldval state]\n      (set! changed true)\n      (set! state newval)\n      (when (some? watches)\n        (notify-w this oldval newval))\n      (callback newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IEquiv\n  (-equiv [_ other]\n          (and (instance? Wrapper other)\n               ;; If either of the wrappers have changed, equality\n               ;; cannot be relied on.\n               (not changed)\n               (not (.-changed other))\n               (= state (.-state other))\n               (= callback (.-callback other))))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Wrap:\")))\n\n(defn make-wrapper [value callback-fn args]\n  (->Wrapper value\n             (util/make-partial-fn callback-fn args)\n             false nil))\n\n\n\n\n#_(do\n  (defn ratom-perf []\n    (set! debug false)\n    (dotimes [_ 10]\n      (let [nite 100000\n            a (atom 0)\n            f (fn []\n                (quot @a 10))\n            mid (make-reaction f)\n            res (track! (fn []\n                          ;; (with-let [x 1])\n                          ;; @(track f)\n                          (inc @mid)\n                          ))]\n        @res\n        (time (dotimes [x nite]\n                (swap! a inc)\n                (flush!)))\n        (dispose! res))))\n  (ratom-perf))\n"]}