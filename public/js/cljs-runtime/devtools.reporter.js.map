{"version":3,"file":"devtools.reporter.js","sources":["devtools/reporter.cljs"],"mappings":";;;;AAKA,+BAAA,/BAAKW;AAIL,AAAA,gDAAA,wDAAAM,xGAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,mFAAA,CAAA,UAAA,MAAAF;;;AAAA,AAAA,AAAA,AAAAE,qFAAA,aAAAC,FAA8Bf;AAA9B,AAAA,IAAAgB,aAAAD;cAAA,AAAAE,4CAAAD,WAAA,IAAA,rEAAmCV;aAAnC,AAAAW,4CAAAD,WAAA,IAAA,pEAA2CxB;AAA3C,AACE,IAAMG,UAAQ,CAAC4B,6DAAAA,+DAAAA;0CAGK,iBAAAtB,mBAAI,AAAWD,1EAD/B,IAAMG,UAAQ,EAAI,cAAWV,bAASO,rBADxC,IAAA,JADF;AAGoB,AAAA,oBAAAC;AAAAA;;AAAkBD;;KAClBA;IACVJ,SAHN,CAAA,4BAAA,uFAAA,YAMkB,CAAA,gDAASO;IACrBC,cAAY,CAAA,sOAAA,pLAAW,AAACC,0EAAmB,oGAAA,lFAAIC,SAAQ,CAAA,0DAAA,TAAUA;IACjEf,aAAW,EAAI,EAAA,WAAA,VAAOC,kBACTA,OACA,CAAA,OAAA,QAAA,6EAAqDU;cAVxE,VAWMJ,WAAaM,YAAYJ,EAAET;AAC/B,IAAMG,kBAAgB,SAAA,RAAMC,vBAZ9B;IAaQE,MAAI,SAAA,RAAMF;IACVI,YAAU,SAAA,RAAMJ;AACpB,oBAAQD,pBAHV;AAGE;AAAA,AAAA,MAAA,KAAAD,MAAA;;;AACA,oBAAQI;AAAR;AAAA,AAAA,MAAA,KAAAJ,MAAA;;;AACA,oBAAQM;AAAR;AAAA,AAAA,MAAA,KAAAN,MAAA;;;AACA,AAAQC,sBAAgBC,QAAQC;;AAChC,AAAQC,UAAIF,QAAQG;;AACpB,OAAOC,eAAUJ;oBACLK,JAtBlB,YAAAO;AAuBI,qBAAA,dAAQZ,qDAA+CK,5DAvB3D;;;AAFJ,AAAA,AAAAc,wEAAA;;AAAA;AAAA,AAAA,AAAAA,kEAAA,WAAAI;AAAA,AAAA,IAAAC,WAAA,AAAAC,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;AAAA,AAAA,IAAAI,qBAAA;AAAA,AAAA,OAAAA,wDAAAH,SAAAD;;;AAAA","names":["footer-msg","footer","js/Error","group-collapsed","console","header","log","details","group-end","e","or__3922__auto__","devtools.reporter/issues-url","message","context-msg","devtools.util/get-lib-info","context","e29479","var_args","args__4502__auto__","len__4499__auto__","i__4500__auto__","argseq__4503__auto__","cljs.core/IndexedSeq","devtools.reporter/report-internal-error!","p__29475","vec__29476","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","seq29471","G__29472","cljs.core/first","cljs.core/next","self__4486__auto__","devtools.context/get-console"],"sourcesContent":["(ns devtools.reporter\n  (:require-macros [devtools.oops :refer [oget]])\n  (:require [devtools.util :as util]\n            [devtools.context :as context]))\n\n(def issues-url \"https://github.com/binaryage/cljs-devtools/issues\")\n\n; -- internal errors  -------------------------------------------------------------------------------------------------------\n\n(defn report-internal-error! [e & [context footer]]\n  (let [console (context/get-console)]\n    (try\n      (let [message (if (instance? js/Error e)\n                      (or (.-message e) e)\n                      e)\n            header #js [\"%cCLJS DevTools Error%c%s\"\n                        \"background-color:red;color:white;font-weight:bold;padding:0px 3px;border-radius:2px;\"\n                        \"color:red\"\n                        (str \" \" message)]\n            context-msg (str \"In \" (util/get-lib-info) (if context (str \", \" context \".\") \".\") \"\\n\\n\")\n            footer-msg (if (some? footer)\n                         footer\n                         (str \"\\n\\n\" \"---\\n\" \"Please report the issue here: \" issues-url))\n            details #js [context-msg e footer-msg]]\n        (let [group-collapsed (oget console \"groupCollapsed\")\n              log (oget console \"log\")\n              group-end (oget console \"groupEnd\")]\n          (assert group-collapsed)\n          (assert log)\n          (assert group-end)\n          (.apply group-collapsed console header)\n          (.apply log console details)\n          (.call group-end console)))\n      (catch :default e\n        (.error console \"FATAL: report-internal-error! failed\" e)))))\n"]}