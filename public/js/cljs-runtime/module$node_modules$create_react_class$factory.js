shadow$provide.module$node_modules$create_react_class$factory=function(h,F,f,q,z){var c=f("module$node_modules$object_assign$index"),H=f("module$node_modules$fbjs$lib$emptyObject"),u=f("module$node_modules$fbjs$lib$invariant"),C=f("module$node_modules$fbjs$lib$warning");var ya={prop:"prop",context:"context",childContext:"child context"};q.exports=function(f,h,q){function z(c,d,f){for(var h in d)d.hasOwnProperty(h)&&C("function"===typeof d[h],"%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.",
c.displayName||"ReactClass",ya[f],h)}function F(c,d){if(d){u("function"!==typeof d,"ReactClass: You're attempting to use a component class or function as a mixin. Instead, just use a regular object.");u(!h(d),"ReactClass: You're attempting to use a component as a mixin. Instead, just use a regular object.");var f=c.prototype,B=f.__reactAutoBindPairs;d.hasOwnProperty("mixins")&&da.mixins(c,d.mixins);for(var q in d)if(d.hasOwnProperty(q)&&"mixins"!==q){var z=d[q],H=f.hasOwnProperty(q),F=H,w=q,N=ha.hasOwnProperty(w)?
ha[w]:null;ka.hasOwnProperty(w)&&u("OVERRIDE_BASE"===N,"ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.",w);F&&u("DEFINE_MANY"===N||"DEFINE_MANY_MERGED"===N,"ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.",w);if(da.hasOwnProperty(q))da[q](c,z);else F=ha.hasOwnProperty(q),"function"!==typeof z||F||H||!1===d.autobind?
H?(H=ha[q],u(F&&("DEFINE_MANY_MERGED"===H||"DEFINE_MANY"===H),"ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.",H,q),"DEFINE_MANY_MERGED"===H?f[q]=za(f[q],z):"DEFINE_MANY"===H&&(f[q]=Y(f[q],z))):(f[q]=z,"function"===typeof z&&d.displayName&&(f[q].displayName=d.displayName+"_"+q)):(B.push(q,z),f[q]=z)}}else f=typeof d,C("object"===f&&null!==d,"%s: You're attempting to include a mixin that is either null or not an object. Check the mixins included by the component, as well as any mixins they include themselves. Expected object but got %s.",
c.displayName||"ReactClass",null===d?null:f)}function qa(c,d){u(c&&d&&"object"===typeof c&&"object"===typeof d,"mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.");for(var f in d)d.hasOwnProperty(f)&&(u(void 0===c[f],"mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.",f),c[f]=d[f]);return c}function za(c,
d){return function(){var f=c.apply(this,arguments),h=d.apply(this,arguments);if(null==f)return h;if(null==h)return f;var u={};qa(u,f);qa(u,h);return u}}function Y(c,d){return function(){c.apply(this,arguments);d.apply(this,arguments)}}function la(c,d){var f=d.bind(c);f.__reactBoundContext=c;f.__reactBoundMethod=d;f.__reactBoundArguments=null;var h=c.constructor.displayName,u=f.bind;f.bind=function(q){for(var B=arguments.length,y=Array(1<B?B-1:0),w=1;w<B;w++)y[w-1]=arguments[w];if(q!==c&&null!==q)C(!1,
"bind(): React component methods may only be bound to the component instance. See %s",h);else if(!y.length)return C(!1,"bind(): You are binding a component method to the component. React does this for you automatically in a high-performance way, so you can safely remove this call. See %s",h),f;B=u.apply(f,arguments);B.__reactBoundContext=c;B.__reactBoundMethod=d;B.__reactBoundArguments=y;return B};return f}var ma=[],ha={mixins:"DEFINE_MANY",statics:"DEFINE_MANY",propTypes:"DEFINE_MANY",contextTypes:"DEFINE_MANY",
childContextTypes:"DEFINE_MANY",getDefaultProps:"DEFINE_MANY_MERGED",getInitialState:"DEFINE_MANY_MERGED",getChildContext:"DEFINE_MANY_MERGED",render:"DEFINE_ONCE",componentWillMount:"DEFINE_MANY",componentDidMount:"DEFINE_MANY",componentWillReceiveProps:"DEFINE_MANY",shouldComponentUpdate:"DEFINE_ONCE",componentWillUpdate:"DEFINE_MANY",componentDidUpdate:"DEFINE_MANY",componentWillUnmount:"DEFINE_MANY",UNSAFE_componentWillMount:"DEFINE_MANY",UNSAFE_componentWillReceiveProps:"DEFINE_MANY",UNSAFE_componentWillUpdate:"DEFINE_MANY",
updateComponent:"OVERRIDE_BASE"},sa={getDerivedStateFromProps:"DEFINE_MANY_MERGED"},da={displayName:function(c,d){c.displayName=d},mixins:function(c,d){if(d)for(var f=0;f<d.length;f++)F(c,d[f])},childContextTypes:function(f,d){z(f,d,"childContext");f.childContextTypes=c({},f.childContextTypes,d)},contextTypes:function(f,d){z(f,d,"context");f.contextTypes=c({},f.contextTypes,d)},getDefaultProps:function(c,d){c.getDefaultProps=c.getDefaultProps?za(c.getDefaultProps,d):d},propTypes:function(f,d){z(f,
d,"prop");f.propTypes=c({},f.propTypes,d)},statics:function(c,d){a:if(d)for(var f in d){var h=d[f];if(d.hasOwnProperty(f)){u(!(f in da),'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.',f);if(f in c){d=sa.hasOwnProperty(f)?sa[f]:null;u("DEFINE_MANY_MERGED"===d,"ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.",
f);c[f]=za(c[f],h);break a}c[f]=h}}},autobind:function(){}},Qa={componentDidMount:function(){this.__isMounted=!0}},Ha={componentWillUnmount:function(){this.__isMounted=!1}},ka={replaceState:function(c,d){this.updater.enqueueReplaceState(this,c,d)},isMounted:function(){C(this.__didWarnIsMounted,"%s: isMounted is deprecated. Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks.",this.constructor&&this.constructor.displayName||this.name||"Component");
this.__didWarnIsMounted=!0;return!!this.__isMounted}},Aa=function(){};c(Aa.prototype,f.prototype,ka);return function(c){var d=function(c,f,h){C(this instanceof d,"Something is calling a React component directly. Use a factory or JSX instead. See: https://fb.me/react-legacyfactory");if(this.__reactAutoBindPairs.length)for(var B=this.__reactAutoBindPairs,y=0;y<B.length;y+=2)this[B[y]]=la(this,B[y+1]);this.props=c;this.context=f;this.refs=H;this.updater=h||q;this.state=null;c=this.getInitialState?this.getInitialState():
null;void 0===c&&this.getInitialState._isMockFunction&&(c=null);u("object"===typeof c&&!Array.isArray(c),"%s.getInitialState(): must return an object or null",d.displayName||"ReactCompositeComponent");this.state=c};d.prototype=new Aa;d.prototype.constructor=d;d.prototype.__reactAutoBindPairs=[];ma.forEach(F.bind(null,d));F(d,Qa);F(d,c);F(d,Ha);d.getDefaultProps&&(d.defaultProps=d.getDefaultProps());d.getDefaultProps&&(d.getDefaultProps.isReactClassApproved={});d.prototype.getInitialState&&(d.prototype.getInitialState.isReactClassApproved=
{});u(d.prototype.render,"createClass(...): Class specification must implement a `render` method.");C(!d.prototype.componentShouldUpdate,"%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.",c.displayName||"A component");C(!d.prototype.componentWillRecieveProps,"%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?",c.displayName||"A component");
C(!d.prototype.UNSAFE_componentWillRecieveProps,"%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?",c.displayName||"A component");for(var f in ha)d.prototype[f]||(d.prototype[f]=null);return d}}}
//# sourceMappingURL=module$node_modules$create_react_class$factory.js.map
